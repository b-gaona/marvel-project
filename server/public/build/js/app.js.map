{"version":3,"sources":["app.js"],"names":["async","getAllCards","res","fetch","window","location","origin","json","getAllDecks","showCards","cards","grid","document","querySelector","forEach","card","div","createElement","classList","add","innerHTML","art","cname","ability","appendChild","showDecks","decks","deck","containerDiv","remove","cardsDiv","cids","createCard","deckInfo","cardInfo","cost","power","cardImg","JSON","stringify","replaceAll","name","avg_cost","avg_power","addEventListener","Swiper","slidesPerView","rows","fill","spaceBetween","pagination","clickable","effect","cardsEffect","slideShadows","perSlideOffset","on","slideChange","evt","imagesToLoad","snapIndex","wrapperEl","id","parentElement","lastChild","parse"],"mappings":"AA8CAA,eAAeC,cACb,MAAMC,QAAYC,MAASC,OAAOC,SAASC,OAAnB,aACxB,aAAaJ,EAAIK,OAGnBP,eAAeQ,cACb,MAAMN,QAAYC,MAASC,OAAOC,SAASC,OAAnB,aACxB,aAAaJ,EAAIK,OAGnB,SAASE,UAAUC,GACjB,MAAMC,EAAOC,SAASC,cAAc,iCAEpCH,EAAMI,QAASC,IACb,MAAMC,EAAMJ,SAASK,cAAc,OACnCD,EAAIE,UAAUC,IAAI,gBAClBH,EAAII,UAAY,mBACJL,EAAKM,aAAaN,EAAKO,mEAEPP,EAAKO,2DAE7BP,EAAKQ,QAAUR,EAAKQ,QAAU,uCAIlCZ,EAAKa,YAAYR,KAIrB,SAASS,UAAUC,GACjB,MAAMf,EAAOC,SAASC,cAAc,iBAEpCa,EAAMZ,QAASa,IACb,MAAMX,EAAMJ,SAASK,cAAc,OACnCD,EAAIE,UAAUC,IAAI,YAAa,OAAQ,cAEvC,MAAMS,EAAehB,SAASK,cAAc,OAC5CW,EAAaV,UAAUC,IAAI,eAAgB,UAC3CS,EAAaV,UAAUW,OAAO,gBAE9B,MAAMC,EAAWlB,SAASK,cAAc,OACxCa,EAASZ,UAAUC,IAAI,kBAEvB,MAAMY,KAAEA,GAASJ,EAEjBI,EAAKjB,QAASC,IACZe,EAASN,YAAYQ,WAAWjB,MAGlCa,EAAaJ,YAAYM,GAEzBd,EAAIQ,YAAYI,GAChBZ,EAAIQ,YAAYS,SAASN,IACzBX,EAAIQ,YAAYU,SAASH,EAAK,KAE9BpB,EAAKa,YAAYR,KAIrB,SAASgB,YAAWX,IAAEA,EAAGC,MAAEA,EAAKC,QAAEA,EAAOY,KAAEA,EAAIC,MAAEA,IAC/C,MAAMC,EAAUzB,SAASK,cAAc,OAKvC,OAJAoB,EAAQnB,UAAUC,IAAI,gBACtBkB,EAAQjB,UAAY,aAAaC,WAAaC,0BAA8BgB,KAAKC,UAC/E,CAAEjB,MAAOA,EAAMkB,WAAW,IAAK,SAAUjB,QAASA,EAAQiB,WAAW,IAAK,SAAUL,KAAAA,EAAMC,MAAAA,QAErFC,EAGT,SAASJ,UAASQ,KAAEA,EAAIC,SAAEA,EAAQC,UAAEA,IAClC,MAAMhB,EAAOf,SAASK,cAAc,OAWpC,OAVAU,EAAKT,UAAUC,IAAI,QAEnBQ,EAAKP,UAAY,oEAEEqB,uDAEQC,wDAECC,oBAErBhB,EAGT,SAASO,UAASZ,MAAEA,EAAKa,KAAEA,EAAIC,MAAEA,EAAKb,QAAEA,IACtC,MAAMR,EAAOH,SAASK,cAAc,OAcpC,OAbAF,EAAKG,UAAUC,IAAI,QAEnBJ,EAAKK,UAAY,4EAEME,uDAEAa,wDAECC,0DAEEb,wBAGnBR,EAhJTH,SAASgC,iBAAiB,mBAAoB5C,UAC5CS,gBAAgBR,eAChBwB,gBAAgBjB,eAEhB,IAAIqC,OAAO,gBAAiB,CAC1BC,cAAe,EACfnC,KAAM,CACJoC,KAAM,EACNC,KAAM,UAERC,aAAc,GACdC,WAAY,CACVC,WAAW,KAIJ,IAAIN,OAAO,gBAAiB,CACrCO,OAAQ,QACRC,YAAa,CACXC,cAAc,EACdC,eAAgB,IAElBC,GAAI,CACFC,YAAcC,IACZ,MAAMC,aAAEA,EAAYC,UAAEA,EAASC,UAAEA,GAAcH,EAGzCxB,EADUtB,SAASC,cAAc,IAAIgD,EAAUC,IAC5BC,cAAcA,cAAcC,UAC/CjD,EAAOuB,KAAK2B,MAAMN,EAAaC,GAAWnB,OAE1CnB,MAAEA,EAAKa,KAAEA,EAAIC,MAAEA,EAAKb,QAAEA,GAAYR,EACxCmB,EAASd,UAAY,gFAEFE,2DAEAa,4DAECC,8DAEEb","file":"app.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", async () => {\r\n  showCards(await getAllCards());\r\n  showDecks(await getAllDecks());\r\n\r\n  new Swiper(\".swiper-cards\", {\r\n    slidesPerView: 3,\r\n    grid: {\r\n      rows: 2,\r\n      fill: \"column\",\r\n    },\r\n    spaceBetween: 15,\r\n    pagination: {\r\n      clickable: true,\r\n    },\r\n  });\r\n\r\n  const sw = new Swiper(\".swiper-decks\", {\r\n    effect: \"cards\",\r\n    cardsEffect: {\r\n      slideShadows: false,\r\n      perSlideOffset: 10,\r\n    },\r\n    on: {\r\n      slideChange: (evt) => {\r\n        const { imagesToLoad, snapIndex, wrapperEl } = evt;\r\n\r\n        const wrapper = document.querySelector(`#${wrapperEl.id}`);\r\n        const cardInfo = wrapper.parentElement.parentElement.lastChild;\r\n        const card = JSON.parse(imagesToLoad[snapIndex].name);\r\n\r\n        const { cname, cost, power, ability } = card;\r\n        cardInfo.innerHTML = `\r\n          <h4 class=\"text-center\">Card info</h4>\r\n          <p>Name: <span>${cname}</span> </p>\r\n          <br>\r\n          <p>Cost: <span>${cost}</span> </p>\r\n          <br>\r\n          <p>Power: <span>${power}</span> </p>\r\n          <br>\r\n          <p>Ability: <span>${ability}</span> </p>\r\n        `;\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\nasync function getAllCards() {\r\n  const res = await fetch(`${window.location.origin}/v1/cards`);\r\n  return await res.json();\r\n}\r\n\r\nasync function getAllDecks() {\r\n  const res = await fetch(`${window.location.origin}/v1/decks`);\r\n  return await res.json();\r\n}\r\n\r\nfunction showCards(cards) {\r\n  const grid = document.querySelector(\".swiper-cards .swiper-wrapper\");\r\n\r\n  cards.forEach((card) => {\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"swiper-slide\");\r\n    div.innerHTML = `\r\n    <img src=\"${card.art}\" alt=\"${card.cname}\" width=\"150px\">\r\n    <div>\r\n      <h3 class=\"text-center\">${card.cname}</h3>\r\n      <p class=\"text-center\">Ability: <span>${\r\n        card.ability ? card.ability : \"None.\"\r\n      }</span></p>\r\n    </div>\r\n    `;\r\n    grid.appendChild(div);\r\n  });\r\n}\r\n\r\nfunction showDecks(decks) {\r\n  const grid = document.querySelector(\"#marvel-decks\");\r\n\r\n  decks.forEach((deck) => {\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"col-gap-3\", \"pb-3\", \"grid-decks\");\r\n\r\n    const containerDiv = document.createElement(\"div\");\r\n    containerDiv.classList.add(\"swiper-decks\", \"d-flex\");\r\n    containerDiv.classList.remove(\"swiper-cards\");\r\n    \r\n    const cardsDiv = document.createElement(\"div\");\r\n    cardsDiv.classList.add(\"swiper-wrapper\");\r\n\r\n    const { cids } = deck;\r\n\r\n    cids.forEach((card) => {\r\n      cardsDiv.appendChild(createCard(card));\r\n    });\r\n\r\n    containerDiv.appendChild(cardsDiv);\r\n\r\n    div.appendChild(containerDiv);\r\n    div.appendChild(deckInfo(deck));\r\n    div.appendChild(cardInfo(cids[0]));\r\n\r\n    grid.appendChild(div);\r\n  });\r\n}\r\n\r\nfunction createCard({ art, cname, ability, cost, power }) {\r\n  const cardImg = document.createElement(\"div\");\r\n  cardImg.classList.add(\"swiper-slide\");\r\n  cardImg.innerHTML = `<img src=\"${art}\" alt=\"${cname}\" width=\"200px\" name='${JSON.stringify(\r\n    { cname: cname.replaceAll(\"'\", \"&#39;\"), ability: ability.replaceAll(\"'\", \"&#39;\"), cost, power }\r\n  )}'>`;\r\n  return cardImg;\r\n}\r\n\r\nfunction deckInfo({ name, avg_cost, avg_power }) {\r\n  const deck = document.createElement(\"div\");\r\n  deck.classList.add(\"info\");\r\n\r\n  deck.innerHTML = `\r\n    <h4 class=\"text-center\">Deck info</h4>\r\n    <p>Name: <span>${name}</span> </p>\r\n    <br>\r\n    <p>Average cost: <span>${avg_cost}</span> </p>\r\n    <br>\r\n    <p>Average power: <span>${avg_power}</span> </p>\r\n  `;\r\n  return deck;\r\n}\r\n\r\nfunction cardInfo({ cname, cost, power, ability }) {\r\n  const card = document.createElement(\"div\");\r\n  card.classList.add(\"info\");\r\n\r\n  card.innerHTML = `\r\n        <h4 class=\"text-center\">Card info</h4>\r\n        <p>Name: <span>${cname}</span> </p>\r\n        <br>\r\n        <p>Cost: <span>${cost}</span> </p>\r\n        <br>\r\n        <p>Power: <span>${power}</span> </p>\r\n        <br>\r\n        <p>Ability: <span>${ability}</span> </p>\r\n      `;\r\n\r\n  return card;\r\n}\r\n"]}